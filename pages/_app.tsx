import "../styles/global.css";
import type { AppProps } from "next/app";
import Head from "next/head";
import { ThemeProvider } from "@mui/material/styles";
import theme from "../src/common/theme";
import Navbar from "../src/common/navigation/Navbar";
import NextNProgress from "nextjs-progressbar";
import { Analytics } from "@vercel/analytics/react";
import { IntlProvider } from "react-intl";
import { createContext, useEffect, useState } from "react";
import SupportedLanguage from "../lang/supportedLanguage";
import { useRouter } from "next/router";

export const LocalizationContext = createContext({
  selectedLanguage: SupportedLanguage.EN,
  setSelectedLanguage: (value: SupportedLanguage) => {},
});
export default function App({ Component, pageProps }: AppProps) {
  const [selectedLanguage, setSelectedLanguage] = useState(
    SupportedLanguage.EN
  );

  const [reload, setReload] = useState(false);

  const { pathname } = useRouter();

  // TODO - Find a better way to do this
  // Makes the typewriter reload on language change
  useEffect(() => {
    if (selectedLanguage && pathname === "/") {
      setReload(true);
    }
    // eslint-disable-next-line react-hooks/exhaustive-deps
  }, [selectedLanguage]);

  useEffect(() => {
    setTimeout(() => {}, 50);

    setReload(false);
  }, [reload]);

  return (
    <>
      <Head>
        <title>Vincent | FullStack Developer</title>
        <meta name="description" content="Generated by create next app" />
        <meta name="viewport" content="width=device-width, initial-scale=1" />
        <link rel="icon" href="/favicon.ico" />
        <link rel="preconnect" href="https://fonts.googleapis.com" />
        <link rel="preconnect" href="https://fonts.gstatic.com" />
      </Head>
      <LocalizationContext.Provider
        value={{ setSelectedLanguage, selectedLanguage }}
      >
        <IntlProvider
          messages={require(`../lang/${selectedLanguage}.json`)}
          locale="fr"
          defaultLocale={selectedLanguage}
        >
          <ThemeProvider theme={theme}>
            <Navbar />
            <NextNProgress height={1} color={theme.palette.primary.main} />
            {!reload && <Component {...pageProps} />}
            <Analytics />
          </ThemeProvider>
        </IntlProvider>
      </LocalizationContext.Provider>
    </>
  );
}
